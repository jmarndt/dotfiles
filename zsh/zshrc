# export ZSH="$HOME/.oh-my-zsh"
# plugins=(git)
# ZSH_DISABLE_COMPFIX="true"
# source $ZSH/oh-my-zsh.sh
# 
# export ZSH_COMPDUMP=$HOME/.cache/.zcompdump-$HOST
# export LESSHISTFILE=$HOME/.cache/.lesshst
# export HISTFILE=$HOME/.cache/.zsh_history
# bindkey -v
# 
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# 
# 
# autoload -U colors && colors
# setopt prompt_subst
# prompt="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "

#####################################################
#####################################################

#export ZSH="$HOME/.oh-my-zsh"
#plugins=(git)
#ZSH_DISABLE_COMPFIX="true"
#source $ZSH/oh-my-zsh.sh

export ZSH_COMPDUMP=$HOME/.cache/.zcompdump-$HOST
export LESSHISTFILE=$HOME/.cache/.lesshst
export HISTFILE=$HOME/.cache/.zsh_history
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


bindkey -v
autoload -U colors && colors
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
zstyle ':vcs_info:git:*' formats '%b'
setopt prompt_subst
prompt="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "


#####################################################
# Custom functions
#####################################################
mkbak() {
  cp $1 $1.bak
}

take() {
  mkdir -p $1 && cd $1
}

ggu () {
  [[ "$#" != 1 ]] && local b=$(git_current_branch)
	git pull --rebase origin "${b:=$1}"
}

git_current_branch () {
  return $vcs_info_msg_0_
}

#function git_branch_name()
#{
#  branch=$(git symbolic-ref HEAD 2> /dev/null | awk 'BEGIN{FS="/"} {print $NF}')
#  if [[ $branch == "" ]];
#  then
#    :
#  else
#    echo $branch
#  fi
#}

# git_current_branch () {
# 	local ref
# 	ref=$(__git_prompt_git symbolic-ref --quiet HEAD 2> /dev/null)
# 	local ret=$?
# 	if [[ $ret != 0 ]]
# 	then
# 		[[ $ret == 128 ]] && return
# 		ref=$(__git_prompt_git rev-parse --short HEAD 2> /dev/null)  || return
# 	fi
# 	echo ${ref#refs/heads/}
# }


#####################################################
# Aliases 
#####################################################
alias src="source ~/.zshrc && echo \"~/.zshrc reloaded\""
alias editrc="vim ~/.zshrc"
alias edt="editrc"
alias dotfiles="cd ~/.dotfiles"
alias .df="dotfiles"
alias clr="clear"
alias sys="systemctl"
alias diff='diff --color'
alias c="xclip"
alias v="xclip -o"
alias cs="xclip -selection clipboard"
alias vs="xclip -o -selection clipboard"
alias ...=../..
alias ....=../../..
alias .....=../../../..
alias ......=../../../../..
alias cp="cp -iv"
alias mv="mv -iv"
alias l='ls'
alias ls='ls -lah --color'
alias mkdir='mkdir -p'
alias gaa='git add --all'
alias gb='git branch'
alias gc='git commit -v'
alias 'gc!'='git commit -v --amend'
# alias gcm='git checkout $(git_main_branch)'
alias gco='git checkout'
alias glog='git log --oneline --decorate --graph'
alias glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'
alias gpf='git push --force-with-lease'
alias grbi='git rebase -i'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbi='git rebase -i'
# alias grbm='git rebase $(git_main_branch)'
alias gpu='git push -u origin HEAD'
alias gst='git status'
alias gsts='echo $(git stash show --name-status)'

